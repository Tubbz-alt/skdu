fdate() {
day=`date +%w`
dayName=`date +%A`
  if [ day == "1" ]; then # change to monday for english speackers
     echo -e "\e[96m Let's take a coffe :) We are monday. `date +%d/%m/%Y` \e[0m";
  elif [ day == "5" ]; then # change to friday for english speackers
     echo -e "\e[96m Few hours left before the week-end. We are friday. `date +%d/%m/%Y` \e[0m ";
  else 
     echo -e "\e[96m Have a good day :) we are $dayName `date +%d/%m/%Y` ! \e[0m";
  fi
}
isCommandsExistOrNot() {
for COMMAND in curl htop sudo nmap zip unzip openssl
do
    if ! command -v $COMMAND &> /dev/null ; then
        echo -e "\e[91m $COMMAND could not be found, please run the option 0 to install it ! \e[0m"
    fi
done
}
isCommandExistOrNot() {
    if ! command -v $1 &> /dev/null ; then
        echo -e "\e[91m $1 could not be found, please run the option 0 at the main menu to install it ! \e[0m"
    fi
}
backupFolder() {			
	clear
	read -p "Enter the ABSOLUTE PATH (ex : /var/log/): " target  
	d=`date +%d-%m-%Y-%H-%M-%S`
	folder="backup-$d"
	cp -r $target /backup/$folder
	# on ne peut pas utiliser un underscore, car il efface le contenue de la variable $target ... 
	echo -e "\e[92m-> Saved folder ($target) \nLocation : /backup/$folder \e[0m";
	echo
	echo -e "\e[92m ls of backupfolder /backup \e[0m $(ls -lt /backup)" 
	echo -e "Press enter to continue"
	read 
}
backupTar() {
	clear
	read -p "Enter the ABSOLUTE PATH (ex : /var/log/): " target  
	d=`date +%d-%m-%Y-%H-%M-%S`
	folder="backup-$d"
	tar czvf /backup/$folder.tar.gz $target
	# on ne peut pas utiliser un underscore, car il efface le contenue de la variable $target ... 
	echo -e "\e[92m-> Saved folder ($target) into a .tar.gz file \nLocation : /backup/$folder.tar.tgz \e[0m";
	echo -e "For decompress the tar.gz archive go into /backup and : tar -xvf $folder.tar.tgz"
	echo
	echo -e "\e[92m ls of backupfolder /backup \e[0m $(ls -lt /backup)" 
    echo -e "Press enter to continue"
	read 
}
backupZip() {
	clear
	read -p "Enter the ABSOLUTE PATH (ex : /var/log/): " target  
	d=`date +%d-%m-%Y-%H-%M-%S`
	folder="backup-$d"
	# folderFinal="$(echo $folder | cut -c2-)" # cette action permet d'obtenir le nom sans / (pas obligatoire, mais je trouve que c'est plus propre)
	zip -r /backup/$folder.zip $target
	# on ne peut pas utiliser un underscore, car il efface le contenue de la variable $target ... 
	echo -e "\e[92m-> Saved folder $target into a .zip file \nLocation : /backup/$folder.zip \e[0m";
	echo -e "For decompress the .zip archive go into /backup and : unzip $folder.zip "
	echo
	echo -e "\e[92m ls of backupfolder /backup \e[0m $(ls -lt /backup)" 
	echo -e "Press enter to continue"
	read 
}